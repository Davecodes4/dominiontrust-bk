# Generated by Django 5.2.4 on 2025-07-18 05:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('banking', '0004_alter_accountnotification_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('notification_type', models.CharField(choices=[('transaction', 'Transaction'), ('security', 'Security'), ('account', 'Account'), ('card', 'Card'), ('kyc', 'KYC'), ('marketing', 'Marketing'), ('system', 'System'), ('two_factor', 'Two Factor')], max_length=20)),
                ('channels', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_notifications', models.IntegerField(default=0)),
                ('sent_notifications', models.IntegerField(default=0)),
                ('failed_notifications', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('transaction', 'Transaction'), ('security', 'Security'), ('account', 'Account'), ('card', 'Card'), ('kyc', 'KYC'), ('marketing', 'Marketing'), ('system', 'System'), ('two_factor', 'Two Factor')], max_length=20)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in_app', 'In-App'), ('push', 'Push Notification')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('html_message', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('priority', models.IntegerField(default=2)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('next_retry_at', models.DateTimeField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.card')),
                ('related_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=50)),
                ('message', models.TextField(blank=True)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('email_transactions', models.BooleanField(default=True)),
                ('email_security', models.BooleanField(default=True)),
                ('email_marketing', models.BooleanField(default=False)),
                ('email_low_balance', models.BooleanField(default=True)),
                ('email_2fa_codes', models.BooleanField(default=True)),
                ('email_account_changes', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=True)),
                ('sms_transactions', models.BooleanField(default=True)),
                ('sms_security', models.BooleanField(default=True)),
                ('sms_low_balance', models.BooleanField(default=True)),
                ('sms_2fa_codes', models.BooleanField(default=True)),
                ('sms_login_alerts', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('in_app_transactions', models.BooleanField(default=True)),
                ('in_app_security', models.BooleanField(default=True)),
                ('in_app_marketing', models.BooleanField(default=True)),
                ('in_app_2fa_alerts', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('push_transactions', models.BooleanField(default=True)),
                ('push_security', models.BooleanField(default=True)),
                ('push_2fa_codes', models.BooleanField(default=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_hours_start', models.TimeField(default='22:00')),
                ('quiet_hours_end', models.TimeField(default='08:00')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('template_type', models.CharField(choices=[('transaction_created', 'Transaction Created'), ('transaction_confirmed', 'Transaction Confirmed'), ('transaction_completed', 'Transaction Completed'), ('transaction_failed', 'Transaction Failed'), ('deposit_received', 'Deposit Received'), ('withdrawal_processed', 'Withdrawal Processed'), ('transfer_sent', 'Transfer Sent'), ('transfer_received', 'Transfer Received'), ('account_created', 'Account Created'), ('account_activated', 'Account Activated'), ('account_deactivated', 'Account Deactivated'), ('account_locked', 'Account Locked'), ('account_unlocked', 'Account Unlocked'), ('password_reset_request', 'Password Reset Request'), ('password_reset_success', 'Password Reset Success'), ('password_changed', 'Password Changed'), ('email_changed', 'Email Address Changed'), ('phone_changed', 'Phone Number Changed'), ('login_alert', 'Login Alert'), ('suspicious_login', 'Suspicious Login Detected'), ('failed_login_attempts', 'Failed Login Attempts'), ('account_lockout', 'Account Lockout'), ('two_factor_enabled', '2FA Enabled'), ('two_factor_disabled', '2FA Disabled'), ('two_factor_code', '2FA Verification Code'), ('two_factor_backup_codes', '2FA Backup Codes'), ('device_registered', 'New Device Registered'), ('device_removed', 'Device Removed'), ('low_balance', 'Low Balance Alert'), ('large_transaction', 'Large Transaction Alert'), ('international_transaction', 'International Transaction'), ('spending_limit_reached', 'Spending Limit Reached'), ('card_created', 'Card Created'), ('card_activated', 'Card Activated'), ('card_blocked', 'Card Blocked'), ('card_unblocked', 'Card Unblocked'), ('card_expired', 'Card Expired'), ('card_expiring_soon', 'Card Expiring Soon'), ('card_replacement', 'Card Replacement'), ('kyc_approved', 'KYC Approved'), ('kyc_rejected', 'KYC Rejected'), ('kyc_documents_required', 'KYC Documents Required'), ('kyc_review_pending', 'KYC Review Pending'), ('compliance_alert', 'Compliance Alert'), ('email_verification', 'Email Verification'), ('phone_verification', 'Phone Verification'), ('identity_verification', 'Identity Verification'), ('welcome_message', 'Welcome Message'), ('service_update', 'Service Update'), ('maintenance_notice', 'Maintenance Notice'), ('promotional_offer', 'Promotional Offer')], max_length=50)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('in_app', 'In-App'), ('push', 'Push Notification')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('title', models.CharField(blank=True, max_length=100)),
                ('body_template', models.TextField()),
                ('html_template', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type', 'channel'],
                'unique_together': {('template_type', 'channel')},
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failure', 'Failed Login'), ('password_change', 'Password Changed'), ('email_change', 'Email Changed'), ('phone_change', 'Phone Changed'), ('2fa_enabled', '2FA Enabled'), ('2fa_disabled', '2FA Disabled'), ('2fa_code_sent', '2FA Code Sent'), ('2fa_verification_success', '2FA Verification Success'), ('2fa_verification_failure', '2FA Verification Failed'), ('device_registered', 'Device Registered'), ('device_removed', 'Device Removed'), ('account_locked', 'Account Locked'), ('account_unlocked', 'Account Unlocked'), ('suspicious_activity', 'Suspicious Activity'), ('password_reset_request', 'Password Reset Requested'), ('password_reset_success', 'Password Reset Success')], max_length=50)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='related_security_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.securityevent'),
        ),
        migrations.CreateModel(
            name='TrustedDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('device_name', models.CharField(max_length=200)),
                ('device_type', models.CharField(choices=[('mobile', 'Mobile Device'), ('tablet', 'Tablet'), ('desktop', 'Desktop'), ('laptop', 'Laptop'), ('other', 'Other')], max_length=50)),
                ('browser', models.CharField(blank=True, max_length=100)),
                ('operating_system', models.CharField(blank=True, max_length=100)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_trusted', models.BooleanField(default=False)),
                ('trust_expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('login_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trusted_devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='securityevent',
            name='trusted_device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.trusteddevice'),
        ),
        migrations.CreateModel(
            name='TwoFactorAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('method', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('app', 'Authenticator App'), ('hardware', 'Hardware Token')], default='sms', max_length=20)),
                ('backup_method', models.CharField(blank=True, choices=[('sms', 'SMS'), ('email', 'Email'), ('app', 'Authenticator App'), ('hardware', 'Hardware Token')], max_length=20)),
                ('secret_key', models.CharField(blank=True, max_length=32)),
                ('backup_codes', models.JSONField(blank=True, default=list)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('failed_attempts', models.IntegerField(default=0)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='two_factor_auth', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TwoFactorCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('purpose', models.CharField(choices=[('login', 'Login Verification'), ('setup', 'Setup Verification'), ('disable', 'Disable 2FA'), ('password_reset', 'Password Reset'), ('email_change', 'Email Change'), ('phone_change', 'Phone Change')], max_length=50)),
                ('expires_at', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='two_factor_codes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_7088ed_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['channel', 'status'], name='notificatio_channel_289841_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type', 'created_at'], name='notificatio_notific_f2e0f7_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['user', 'event_type'], name='notificatio_user_id_69cd61_idx'),
        ),
        migrations.AddIndex(
            model_name='securityevent',
            index=models.Index(fields=['risk_level', 'created_at'], name='notificatio_risk_le_8494aa_idx'),
        ),
    ]
