# Generated by Django 5.2.4 on 2025-07-09 09:34

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('card_number', models.CharField(blank=True, max_length=16, unique=True)),
                ('card_brand', models.CharField(choices=[('visa', 'Visa'), ('mastercard', 'Mastercard'), ('verve', 'Verve')], default='verve', max_length=20)),
                ('card_type', models.CharField(choices=[('debit', 'Debit Card'), ('credit', 'Credit Card'), ('prepaid', 'Prepaid Card')], default='debit', max_length=10)),
                ('card_name', models.CharField(blank=True, max_length=200)),
                ('expiry_date', models.DateField()),
                ('cvv', models.CharField(blank=True, max_length=3)),
                ('pin_hash', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('blocked', 'Blocked'), ('expired', 'Expired'), ('damaged', 'Damaged'), ('stolen', 'Stolen')], default='active', max_length=20)),
                ('daily_limit', models.DecimalField(decimal_places=2, default=100000.0, max_digits=10)),
                ('weekly_limit', models.DecimalField(decimal_places=2, default=700000.0, max_digits=10)),
                ('monthly_limit', models.DecimalField(decimal_places=2, default=3000000.0, max_digits=10)),
                ('international_transactions', models.BooleanField(default=False)),
                ('online_transactions', models.BooleanField(default=True)),
                ('contactless_enabled', models.BooleanField(default=True)),
                ('last_used_date', models.DateTimeField(blank=True, null=True)),
                ('failed_attempts', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('issued_date', models.DateField(default=datetime.date.today)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='accounts.bankaccount')),
            ],
            options={
                'verbose_name': 'Card',
                'verbose_name_plural': 'Cards',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference', models.CharField(blank=True, max_length=20, unique=True)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('payment', 'Payment'), ('fee', 'Fee'), ('interest', 'Interest'), ('reversal', 'Reversal'), ('charge', 'Service Charge'), ('loan_disbursement', 'Loan Disbursement'), ('loan_repayment', 'Loan Repayment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('description', models.TextField(blank=True)),
                ('narration', models.CharField(blank=True, max_length=200)),
                ('customer_reference', models.CharField(blank=True, max_length=100)),
                ('channel', models.CharField(choices=[('online', 'Online Banking'), ('mobile', 'Mobile Banking'), ('atm', 'ATM'), ('branch', 'Branch'), ('pos', 'Point of Sale'), ('api', 'API'), ('system', 'System Generated')], default='online', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('processed_by', models.CharField(blank=True, max_length=200)),
                ('approval_required', models.BooleanField(default=False)),
                ('approved_by', models.CharField(blank=True, max_length=200)),
                ('from_account_balance_before', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('from_account_balance_after', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('to_account_balance_before', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('to_account_balance_after', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('value_date', models.DateField(default=datetime.date.today)),
                ('from_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transactions', to='accounts.bankaccount')),
                ('to_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transactions', to='accounts.bankaccount')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccountNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('transaction', 'Transaction Alert'), ('low_balance', 'Low Balance Alert'), ('large_transaction', 'Large Transaction Alert'), ('login', 'Login Alert'), ('card_transaction', 'Card Transaction Alert'), ('account_update', 'Account Update'), ('security', 'Security Alert'), ('maintenance', 'Maintenance Notice'), ('promotion', 'Promotional Message')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('delivery_channel', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('is_sent', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.bankaccount')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.transaction')),
            ],
            options={
                'verbose_name': 'Account Notification',
                'verbose_name_plural': 'Account Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_type', models.CharField(choices=[('savings', 'Savings Account'), ('current', 'Current Account'), ('fixed_deposit', 'Fixed Deposit'), ('foreign_currency', 'Foreign Currency Account'), ('joint', 'Joint Account'), ('corporate', 'Corporate Account')], max_length=20)),
                ('customer_tier', models.CharField(choices=[], max_length=20)),
                ('limit_type', models.CharField(choices=[('daily', 'Daily Limit'), ('weekly', 'Weekly Limit'), ('monthly', 'Monthly Limit'), ('yearly', 'Yearly Limit'), ('per_transaction', 'Per Transaction Limit')], max_length=20)),
                ('transaction_category', models.CharField(choices=[('transfer', 'Transfers'), ('withdrawal', 'Withdrawals'), ('payment', 'Payments'), ('international', 'International Transactions'), ('card_transaction', 'Card Transactions')], max_length=20)),
                ('limit_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transaction Limit',
                'verbose_name_plural': 'Transaction Limits',
                'unique_together': {('account_type', 'customer_tier', 'limit_type', 'transaction_category')},
            },
        ),
        migrations.CreateModel(
            name='TransferRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('to_account_number', models.CharField(max_length=20)),
                ('to_bank_code', models.CharField(blank=True, max_length=10)),
                ('to_bank_name', models.CharField(blank=True, max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transfer_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('transfer_type', models.CharField(choices=[('internal', 'Internal Transfer'), ('domestic', 'Domestic Transfer'), ('international', 'International Transfer')], default='internal', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_date', models.DateField(blank=True, null=True)),
                ('from_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_requests_sent', to='accounts.bankaccount')),
                ('to_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transfer_requests_received', to='accounts.bankaccount')),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.transaction')),
            ],
            options={
                'verbose_name': 'Transfer Request',
                'verbose_name_plural': 'Transfer Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccountStatement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('statement_type', models.CharField(choices=[('monthly', 'Monthly Statement'), ('quarterly', 'Quarterly Statement'), ('annual', 'Annual Statement'), ('custom', 'Custom Period')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('statement_date', models.DateField(default=datetime.date.today)),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('closing_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_credits', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('total_debits', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('is_generated', models.BooleanField(default=False)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('postal', 'Postal Mail'), ('download', 'Download')], default='email', max_length=20)),
                ('is_delivered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='accounts.bankaccount')),
            ],
            options={
                'verbose_name': 'Account Statement',
                'verbose_name_plural': 'Account Statements',
                'ordering': ['-created_at'],
                'unique_together': {('account', 'statement_type', 'start_date', 'end_date')},
            },
        ),
    ]
